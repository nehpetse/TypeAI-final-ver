diff --git a/node_modules/expo-file-system/android/src/main/java/expo/modules/filesystem/FileSystemModule.kt b/node_modules/expo-file-system/android/src/main/java/expo/modules/filesystem/FileSystemModule.kt
index 964df1a..98e204d 100644
--- a/node_modules/expo-file-system/android/src/main/java/expo/modules/filesystem/FileSystemModule.kt
+++ b/node_modules/expo-file-system/android/src/main/java/expo/modules/filesystem/FileSystemModule.kt
@@ -146,13 +146,21 @@ open class FileSystemModule : Module() {
             else -> openResourceInputStream(uriStr)
           } ?: throw FileNotFoundException()
 
+          val size = if (uri.scheme == "content") {
+            context.contentResolver.openFileDescriptor(uri, "r")?.use { pfd ->
+                pfd.statSize.takeIf { it >= 0L }
+            }
+        } else null
+
           return@AsyncFunction Bundle().apply {
             putBoolean("exists", true)
             putBoolean("isDirectory", false)
             putString("uri", uri.toString())
             // NOTE: `.available()` is supposedly not a reliable source of size info, but it's been
-            //       more reliable than querying `OpenableColumns.SIZE` in practice in tests ¯\_(ツ)_/¯
-            putDouble("size", inputStream.available().toDouble())
+            //       more reliable than querying `OpenableColumns.SIZE` in practice in tests ¯\_(ツ)_/
+            //
+            // NOTE:  Modification - we hack around this using ParcelFileDescriptors
+            putDouble("size", size?.toDouble() ?:inputStream.available().toDouble())
             if (options.md5 == true) {
               val md5bytes = DigestUtils.md5(inputStream)
               putString("md5", String(Hex.encodeHex(md5bytes)))
